version: '3.8'

services:
  # PostgreSQL database service
  postgres:
    image: postgres:15-alpine
    container_name: cinetech_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-cinetech}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  # Backend API service (Express + Prisma)
  backend:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: cinetech_backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-cinetech}?schema=public
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      - PORT=3001
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - EMAIL_SERVER=smtp://mailhog:1025
      - EMAIL_FROM=${EMAIL_FROM:-no-reply@cinetech.local}
      - TMDB_API_KEY=${TMDB_API_KEY}
      - NODE_ENV=development
    ports:
      - "3001:3001"
    volumes:
      - ./api/src:/app/src
      - ./api/prisma:/app/prisma
      - ./api/node_modules:/app/node_modules
    command: npm run dev

  # Frontend service (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cinetech_frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_TMDB_API_KEY=${TMDB_API_KEY}
      - NEXT_PUBLIC_TMDB_API_URL=https://api.themoviedb.org/3
      - NEXT_PUBLIC_TMDB_IMAGE_URL=https://image.tmdb.org/t/p/original
      - NEXT_PUBLIC_TMDB_IMAGE_URL_W500=https://image.tmdb.org/t/p/w500
      - NEXT_PUBLIC_TMDB_IMAGE_URL_W342=https://image.tmdb.org/t/p/w342
      - NEXT_PUBLIC_TMDB_IMAGE_URL_W185=https://image.tmdb.org/t/p/w185
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/app:/app/app
      - ./frontend/components:/app/components
      - ./frontend/contexts:/app/contexts
      - ./frontend/lib:/app/lib
      - ./frontend/public:/app/public
      - ./frontend/styles:/app/styles
      - ./frontend/types:/app/types
      - ./frontend/node_modules:/app/node_modules
    command: npm run dev

  # Mailhog service for email testing
  mailhog:
    image: mailhog/mailhog
    container_name: cinetech_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web interface

volumes:
  postgres_data:
